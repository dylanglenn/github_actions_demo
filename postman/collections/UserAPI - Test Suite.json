{
	"info": {
		"_postman_id": "29bb5d0b-3f27-4ea7-8744-867a6bb064bd",
		"name": "UserAPI - Test Suite",
		"description": "API to create and manage user data. It allows users to register, login and get/update/delete their data.\n\nThis test suite verifies that all the endpoints of the API are working correctly.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "27272610-29bb5d0b-3f27-4ea7-8744-867a6bb064bd"
	},
	"item": [
		{
			"name": "Register a new user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3223224e-301c-4ceb-afea-6f07afb91190",
						"exec": [
							"pm.variables.set(\"rUserName\", pm.variables.replaceIn('{{$randomUserName}}'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fe1f4d03-a174-44f3-9300-8f193c9172b5",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Token is a string\", function(){",
							"\tpm.expect(jsonData.token).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"User username was correctly set\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "3925d719-d4a4-4950-953e-7443008d2ebb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{rUserName}}\",\n  \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": [
				{
					"id": "14b12ca7-ea6b-4589-88d9-12f4c8b7d245",
					"name": "User registered successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/v1/users/register",
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"token\": \"<string>\"\n}"
				},
				{
					"id": "c9d621ea-9e68-41dc-ab11-689d1aeb826d",
					"name": "Error occurred",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Log in a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ab7f6e3f-b801-4bb7-80e1-51dd7962672d",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Token is a string\", function(){",
							"\tpm.expect(jsonData.token).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"User username is correct\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});",
							"",
							"pm.variables.set(\"newUserID\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "7730443e-2778-43c9-b323-c892b1018341",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{rUserName}}\",\n  \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"id": "14fe1bfe-f571-4d7a-a3c1-a01a84a55d7e",
					"name": "User logged in successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/v1/users/login",
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"token\": \"<string>\"\n}"
				},
				{
					"id": "9b53cbf1-8d40-426b-ad58-add4f45be4b5",
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "5ad4303c-b332-4e7a-98d1-d543a845243e",
					"name": "Error occurred",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Retrieve a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e08af3fd-04f9-4e6e-a5dd-160065fe414d",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"User username is correct\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "33306df8-0391-4d6b-82c2-0f721886e509",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "a8da65e8-7d40-4308-ab40-047b310bb05f",
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "/v1/users/:id",
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
				},
				{
					"id": "c1a7655a-a3bb-440e-8925-072668adaa21",
					"name": "User not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "115a6007-f0cc-4082-90c9-98f77a4bba3c",
					"name": "Error occurred",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update a user",
			"id": "e6de3570-9f17-4e33-8a68-676b8aa1b556",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "f602264c-eb7f-4fef-8df4-2fef8d9c2e93",
					"name": "User updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "acc9f0bf-99fd-4229-a708-41f906216f53",
					"name": "Error occurred",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Delete a user",
			"id": "68caf8c1-2eeb-4bc7-b8ee-115f199f9853",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "b4321723-eed1-48f7-ac32-39234f4b9fc8",
					"name": "User deleted successfully",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "e81a8781-4787-44a6-83d2-63ba25588a65",
					"name": "Error occurred",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "67aca29d-f775-4f9c-8b6a-6d7a44dccdd7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f00f94be-13ab-4d6c-af67-c1b40be63261",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 800ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(800);",
					"});",
					"",
					"pm.test(\"Successful request\", ()=> { ",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
					"});",
					""
				]
			}
		}
	]
}